{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "10287087421480429456"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "defaultValue": "prod",
      "metadata": {
        "description": "Environment name (dev, staging, prod)"
      }
    },
    "applicationName": {
      "type": "string",
      "defaultValue": "credit-risk-analysis",
      "metadata": {
        "description": "Application name"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for deployment"
      }
    },
    "adminEmail": {
      "type": "string",
      "metadata": {
        "description": "kauntey.shah@uk.ey.com"
      }
    }
  },
  "variables": {
    "resourcePrefix": "[format('{0}-{1}', parameters('applicationName'), parameters('environmentName'))]",
    "resourceToken": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
    "shortPrefix": "[format('cra{0}', parameters('environmentName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}kv{1}', variables('shortPrefix'), variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 7
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Application": "[parameters('applicationName')]"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('{0}-ai-{1}', variables('resourcePrefix'), variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "RetentionInDays": 30
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Application": "[parameters('applicationName')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}-asp-{1}', variables('resourcePrefix'), variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[if(equals(parameters('environmentName'), 'prod'), 'P1V2', 'B1')]",
        "tier": "[if(equals(parameters('environmentName'), 'prod'), 'PremiumV2', 'Basic')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Application": "[parameters('applicationName')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}-app-{1}', variables('resourcePrefix'), variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-asp-{1}', variables('resourcePrefix'), variables('resourceToken')))]",
        "siteConfig": {
          "linuxFxVersion": "PYTHON|3.11",
          "appCommandLine": "python -m streamlit run app/core/streamlit_app_langgraph_viz.py --server.port=8000 --server.address=0.0.0.0",
          "appSettings": [
            {
              "name": "WEBSITES_PORT",
              "value": "8000"
            },
            {
              "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
              "value": "true"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}-ai-{1}', variables('resourcePrefix'), variables('resourceToken'))), '2020-02-02').ConnectionString]"
            },
            {
              "name": "AZURE_KEY_VAULT_URL",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', format('{0}kv{1}', variables('shortPrefix'), variables('resourceToken'))), '2023-07-01').vaultUri]"
            },
            {
              "name": "ENVIRONMENT",
              "value": "[parameters('environmentName')]"
            }
          ]
        },
        "httpsOnly": true,
        "clientAffinityEnabled": false
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Application": "[parameters('applicationName')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', format('{0}-ai-{1}', variables('resourcePrefix'), variables('resourceToken')))]",
        "[resourceId('Microsoft.Web/serverfarms', format('{0}-asp-{1}', variables('resourcePrefix'), variables('resourceToken')))]",
        "[resourceId('Microsoft.KeyVault/vaults', format('{0}kv{1}', variables('shortPrefix'), variables('resourceToken')))]"
      ]
    },
    {
      "type": "Microsoft.Databricks/workspaces",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}-dbw-{1}', variables('resourcePrefix'), variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "standard"
      },
      "properties": {
        "managedResourceGroupId": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-dbw-managed-rg-{1}', variables('resourcePrefix'), variables('resourceToken')))]",
        "parameters": {
          "enableNoPublicIp": {
            "value": false
          }
        }
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Application": "[parameters('applicationName')]"
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}acr{1}', replace(variables('resourcePrefix'), '-', ''), variables('resourceToken'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Application": "[parameters('applicationName')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', format('{0}kv{1}', variables('shortPrefix'), variables('resourceToken')), 'add')]",
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', format('{0}-app-{1}', variables('resourcePrefix'), variables('resourceToken'))), '2023-01-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', format('{0}-app-{1}', variables('resourcePrefix'), variables('resourceToken')))]",
        "[resourceId('Microsoft.KeyVault/vaults', format('{0}kv{1}', variables('shortPrefix'), variables('resourceToken')))]"
      ]
    }
  ],
  "outputs": {
    "appServiceUrl": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', format('{0}-app-{1}', variables('resourcePrefix'), variables('resourceToken'))), '2023-01-01').defaultHostName)]"
    },
    "databricksWorkspaceUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Databricks/workspaces', format('{0}-dbw-{1}', variables('resourcePrefix'), variables('resourceToken'))), '2023-02-01').workspaceUrl]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[format('{0}kv{1}', variables('shortPrefix'), variables('resourceToken'))]"
    },
    "containerRegistryLoginServer": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', format('{0}acr{1}', replace(variables('resourcePrefix'), '-', ''), variables('resourceToken'))), '2023-07-01').loginServer]"
    },
    "applicationInsightsInstrumentationKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}-ai-{1}', variables('resourcePrefix'), variables('resourceToken'))), '2020-02-02').InstrumentationKey]"
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    }
  }
}